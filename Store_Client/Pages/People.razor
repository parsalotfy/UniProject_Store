@page "/people"
@inject HttpClient Http
@using SharedProject;
<h3>People</h3>

<EditForm Model="@person">
    <div class="col-12 row">
        <label class="col-2 font-weight-bold">Id : </label>
        <InputNumber class="form-control col-3" @bind-Value="person.Id" placeholder="id" />
    </div>
    <br />
    <div class="col-12 row">
        <label class="col-2 font-weight-bold">Name : </label>
        <InputText class="form-control col-3" @bind-Value="person.Name" placeholder="name" />
    </div>
    <br />
    <br />
    <div class="col-12 row">
        <label class="col-2 font-weight-bold">Age : </label>
        <InputNumber class="form-control col-3" @bind-Value="person.Age" placeholder="age" />
    </div>
    <br />

    <table class="dcf-table dcf-table-responsive dcf-table-bordered dcf-table-striped dcf-w-100%">
        <tbody>
            <tr>
                <td class="dcf-txt-center">
                    <input type="submit" class="form-control  btn btn-primary text-center" @onclick="@AddPerson" value="Add" />
                </td>
                <td class="dcf-txt-center">
                    <input type="submit" class="form-control btn btn-primary text-center" @onclick="@UpdatePerson" value="Update" />
                </td>
            </tr>
            <tr>
                <td class="dcf-txt-center">
                    <input type="submit" class="form-control  btn btn-primary text-center" @onclick="@DeletePerson" value="Delete by ID" />
                </td>
                <td class="dcf-txt-center">
                    <input type="submit" class="form-control  btn btn-primary text-center" @onclick="@DeleteAll" value="Clear Database" />
                </td>
            </tr>
        </tbody>
    </table>

    <br /><br />
    <input type="submit" class="form-control  btn btn-primary text-center" @onclick="@Refresh" value="Refresh Page" />


</EditForm>

<br />
<br />





@if (people == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Age</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Person p in people)
            {
                <tr>
                    <td>@p.Id</td>
                    <td>@p.Name</td>
                    <td>@p.Age</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    public List<Person> people;
    public Person person = new Person();


    // GET
    protected override async Task OnInitializedAsync()
    {
        people = await Http.GetFromJsonAsync<List<Person>>("https://parsalotfy.ir/api/people");
    }


    // POST
    private async void AddPerson()
    {
        HttpResponseMessage httpResponse = await Http.PostAsJsonAsync<Person>("https://parsalotfy.ir/api/people", person);

        // should be done offline with API response check
        people = await Http.GetFromJsonAsync<List<Person>>("https://parsalotfy.ir/api/people");
        StateHasChanged();
    }



    //PUT
    private async void UpdatePerson()
    {
        HttpResponseMessage httpResponse = await Http.PutAsJsonAsync<Person>("https://parsalotfy.ir/api/people", person);

        // should be done offline with API response check
        people = await Http.GetFromJsonAsync<List<Person>>("https://parsalotfy.ir/api/people");
        StateHasChanged();
    }


    //DELETE Person
    private async void DeletePerson()
    {
        HttpResponseMessage httpResponse = await Http.DeleteAsync("https://parsalotfy.ir/api/people/" + person.Id);

        // should be done offline with API response check
        people = await Http.GetFromJsonAsync<List<Person>>("https://parsalotfy.ir/api/people");
        StateHasChanged();
    }


    //DELETE All
    private async void DeleteAll()
    {
        HttpResponseMessage httpResponse = await Http.DeleteAsync("https://parsalotfy.ir/api/people");

        // should be done offline with API response check
        people = await Http.GetFromJsonAsync<List<Person>>("https://parsalotfy.ir/api/people");
        StateHasChanged();
    }

    private void Refresh()
    {
        StateHasChanged();
    }


}
